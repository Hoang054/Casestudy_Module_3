@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
@model HomeViewModel
@{ ViewBag.Title = "Thanh toán";
    Layout = "~/Views/Shared/Layout.cshtml";
    var user = await userManager.GetUserAsync(User);
    IList<string> roles = new List<string>();
    if (user != null)
    {
        var userin = Task.Run(async () => await userManager.FindByIdAsync(user.Id)).Result;
        roles = Task.Run(async () => await userManager.GetRolesAsync(userin)).Result;
    } }

<div class="container single_product_container">
    <div class="row">
        <div class="col">
            <div class="card-body">
                <div class="table-responsive">
                    @if (Model.CartItems.Count > 0)
                    {
        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
            <thead class="thead-dark" style="text-align:center">
                <tr>
                    <td>Mã SP</td>
                    <td>Tên SP</td>
                    <td>Ảnh SP</td>
                    <td>Số lượng</td>
                    <td>Đơn giá</td>
                    <td>Thành tiền</td>
                    <td></td>
                </tr>
            </thead>
            <tbody style="text-align:center">
                @foreach (var item in Model.CartItems)
                {
<tr>

    <td>@item.Product.Id</td>
    <td>@item.Product.ProductName</td>
    <td><img src="~/images/@item.Product.ImagePath" width="100" /></td>
    <td>@item.Quantity</td>
    <td>@currency(item.Product.Price - item.Product.Price * item.Product.Discount / 100)</td>
    <td>@currency((item.Product.Price - item.Product.Price * item.Product.Discount / 100) * item.Quantity)</td>

    <td><a href="#" data-id="@item.Product.Id" class="btn-delete">Xoá</a></td>
</tr>}

            </tbody>
        </table>}

                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="section group">
            <div class="col-md-6">

                @if (signInManager.IsSignedIn(User))
                {
            <form asp-controller="Cart" asp-action="Payment">
                <div class="form-group">
                    <label>Người nhận</label>
                    <input name="shipName" class="form-control" id="nguoinhan" value="@user.FullName" placeholder="Vui lòng nhập tên" required />
                </div>
                <div class="form-group">
                    <label>Điện thoại</label>
                    <input name="mobile" class="form-control" id="dienthoai" value="@user.PhoneNumber" placeholder="Vui lòng nhập số điện thoại" required />
                </div>
                <div class="form-group">
                    <label>Địa chỉ</label>
                    <input name="address" class="form-control" id="diachi" value="@user.Address" placeholder="Vui lòng nhập địa chỉ" required />
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input name="email" class="form-control" id="emai" value="@user.Email" placeholder="Vui lòng nhập email" />
                </div>
                <button class="btn btn-outline-danger">Gửi đơn hàng</button>
            </form>}
        else
        {
            <form asp-controller="Cart" asp-action="Payment">
                <div class="form-group">
                    <label>Người nhận</label>
                    <input name="shipName" class="form-control" id="nguoinhan" placeholder="Vui lòng nhập tên" required />
                </div>
                <div class="form-group">
                    <label>Điện thoại</label>
                    <input name="mobile" class="form-control" id="dienthoai" placeholder="Vui lòng nhập số điện thoại" required />
                </div>
                <div class="form-group">
                    <label>Địa chỉ</label>
                    <input name="address" class="form-control" id="diachi" placeholder="Vui lòng nhập địa chỉ" required />
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input name="email" class="form-control" id="emai" placeholder="Vui lòng nhập email" />
                </div>
                <button class="btn btn-outline-danger">Gửi đơn hàng</button>
            </form>}
            </div>

        </div>
    </div>
</div>
<style>
    .form-control {
        width: 500px;
    }

    label.error {
        display: inline-block;
        color: red;
        width: 200px;
        font-size: 15px;
        margin-top: 15px
    }

    .error {
        font-size: 15px;
    }

    #btnSave {
        background-color: orangered;
        color: white;
    }
</style>
@section Scripts {
    <script>

        @functions
        {
        public string currency(float money1)
        {
            var vietnam = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
            string money2 = String.Format(vietnam, "{0:c}", money1);
            int start = money2.Length - 1;
            return money2.Replace(",00", "");
        }
    }
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.15.0/jquery.validate.js"></script>
    <script>
        $(document).ready(function () {
            $("#thanhtoan").validate({
                rules: {
                    shipname: {
                        required: true,
                        minlength: 6
                    },
                    address: {
                        required: true,
                        minlength: 10
                    },
                    mobile: {
                        required: true,
                        minlength: 8,
                        maxlength: 11,
                        regex: "(84|0[3|5|7|8|9])+([0-9]{8})"
                    },
                },
                messages: {
                    shipname: {
                        required: "Bạn chưa nhập tên",
                        minlength: "Địa chỉ ngắn vậy sao tìm được?"
                    },
                    address: {
                        required: "Bạn chưa nhập địa chỉ",
                        minlength: "Địa chỉ ngắn vậy sao tìm được?"
                    },
                    mobile: {
                        required: "Vui lòng nhập số điện thoại",
                        minlength: "Số máy quý khách vừa nhập là số không có thực",
                        maxlength: "Vui lòng nhập đúng số điện thoại",
                        regex: "Số điện thoại không có thực"
                    },
                },
            });
            //$("#btnSave").click(function (e) {
            //    console.log($('#thanhtoan').valid);
            //        if ($('#thanhtoan').valid) {
            //            var valdata = $("#thanhtoan").serialize();
            //            $.ajax(
            //                {
            //                    type: "POST",
            //                    url: "/Cart/Payment",
            //                    dataType: "json",
            //                    data: valdata,

            //                    success: function () {
            //                        alert("Đặt hàng thành công!! Cảm ơn đã ủng hộ chúng tôi <3")
            //                        window.location.href = 'index';

            //                    }
            //                });
            //        }
            //    });
        });
    </script>
}
